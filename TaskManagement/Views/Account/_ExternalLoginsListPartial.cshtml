@model TaskManagement.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <ul class="social-network social-circle d-flex justify-content-center">
                <li>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        if (p.AuthenticationType == "Facebook")
                        {
                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account"><a class="icoFacebook" title="Facebook"><i class="fa fa-facebook"></i></a></button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">
                                <a class="icoGoogle" title="Facebook"><i class="fa fa-google"></i></a>
                            </button>
                        
                        }
                    }
                </li>


            </ul>
        }
    }
}
